/*
 * Copyright (c) 2010, ETH Zurich.
 * All rights reserved.
 *
 * This file is distributed under the terms in the attached LICENSE file.
 * If you do not find this file, copies can be found by writing to:
 * ETH Zurich D-INFK, Haldeneggsteig 4, CH-8092 Zurich. Attn: Systems Group.
 */


interface usb_manager "USB Manager Interface" {
    
    typedef struct {
        uint8             bType;
        uint8             bRequest;
        uint16            wValue;
        uint16            wIndex;
        uint16            uint16;
    } usb_device_request;

    alias usb_error_t uint32;
    
    

    rpc request_get_data(in usb_device_request request, 
                            in uint16 length,
                            in uint8 data[len], 
                            out usb_error_t ret_status);
                            
    rpc request_set_data(in usb_device_request request, 
                            out usb_error_t ret_status,
                            out uint16 ret_length, 
                            out uint8 ret_data[len_out]);
                            
    rpc request(in usb_device_request request, out usb_error_t ret_status);
};