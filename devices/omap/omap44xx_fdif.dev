/*
 * Copyright (c) 2013 ETH Zurich. All rights reserved.
 *
 * This file is distributed under the terms in the attached LICENSE file.
 * If you do not find this file, copies can be found by writing to:
 * ETH Zurich D-INFK, CAB F.78, Universitaetstr. 6, CH-8092 Zurich,
 * Attn: Systems Group.
 */

/*
 * omap44xx_fdif.dev
 *
 * DESCRIPTION: 
 *
 * NOTE: This file has been automatically generated based on the
 * XML files extracted from the TI RDT v1.0.0.4p Tool.
 * Download from here: http://www.ti.com/product/omap4460
 * This means that the file might not be optimal in terms of naming
 * conventions for constants and registers (duplicated
 * namespaces in register and device name etc.).
 * Also, because of the underlying structure from the original XML
 * it's possible that some constants appear multiple times (if they
 * have slightly different descriptions for example).
 *
 * You want to clean that up before using the files for the first time!
 */
 
device omap44xx_fdif msbfirst ( addr base ) "" {
    
    
    register fdif_revision ro addr(base, 0x0) "IP Revision Identifier (X.Y.R) Used by software to track features, bugs, and compatibility" type(uint32);
    
    register fdif_hwinfo addr(base, 0x4) "Information about the IP module's hardware configuration, that is, typically the module's HDL generics (if any). Actual field format and encoding is up to the module's designer to decide." {
        _ 28 mbz;
        fdif_tags 4 ro "Hardware design value. This bit field reflects the value of the FDIF_TAG generic parameter. 0x0: 1 tag supported 0x1: 2 tags supported [...] 0xF: 16 tags supported";
    };

    constants standbymode_status width(2) "" {
        STANDBYMODE_0 = 0 "Force-standby mode: local initiator is unconditionally placed in standby state. Backup mode, for debug only.";
        STANDBYMODE_1 = 1 "No-standby mode: local initiator is unconditionally placed out of standby state. Backup mode, for debug only.";
        STANDBYMODE_2 = 2 "Smart-standby mode: local initiator standby status depends on local conditions, that is, the module's functional requirement from the initiator. IP module shall not generate (initiator-related) wake-up events.";
        STANDBYMODE_3 = 3 "Reserved";
    };

    constants idlemode_status width(2) "" {
        IDLEMODE_0 = 0 "Force-idle mode: local target's idle state follows (acknowledges) the system's idle requests unconditionally, that is, regardless of the IP module's internal requirements. Backup mode, for debug only.";
        IDLEMODE_1 = 1 "No-idle mode: local target never enters idle state. Backup mode, for debug only.";
        IDLEMODE_2 = 2 "Smart-idle mode: local target's idle state eventually follows (acknowledges) the system's idle requests, depending on the IP module's internal requirements. IP module shall not generate (IRQ- or DMA-request-related) wake-up events.";
        IDLEMODE_3 = 3 "Reserved";
    };

    constants softreset_status width(1) "" {
        SOFTRESET_0_r = 0 "Reset done, no pending action";
        SOFTRESET_0_w = 0 "No action";
        SOFTRESET_1_w = 1 "Initiate software reset";
        SOFTRESET_1_r = 1 "Reset (software or other) ongoing";
    };
    
    register fdif_sysconfig addr(base, 0x10) "Clock management configuration" {
        _ 26 mbz;
        standbymode 2 rw type(standbymode_status) "Configuration of the local initiator state management mode. By definition, initiator may generate read/write transaction as long as it is out of STANDBY state.";
        idlemode 2 rw type(idlemode_status) "Configuration of the local target state management mode. By definition, target can handle read/write transaction as long as it is out of IDLE state.";
        _ 1 mbz;
        softreset 1 rw type(softreset_status) "Software reset.";
    };

    constants finish_irq_status width(1) "" {
        FINISH_IRQ_0_w = 0 "No action";
        FINISH_IRQ_0_r = 0 "No event pending";
        FINISH_IRQ_1_r = 1 "Event pending";
        FINISH_IRQ_1_w = 1 "Set event (debug)";
    };
    
    register fdif_irqstatus_raw_j_0 addr(base, 0x24) "Per-event raw interrupt status vector, line #n. Raw status is set even if event is not enabled. Write 1 to set the (raw) status, mostly for debug." {
        _ 23 mbz;
        finish_irq 1 rw type(finish_irq_status) "Face detection processing done.";
        _ 7 mbz;
        err_irq 1 rw type(finish_irq_status) "Error received by the L3 port.";
    };
    
    register fdif_irqstatus_raw_j_1 addr(base, 0x34) "Per-event raw interrupt status vector, line #n. Raw status is set even if event is not enabled. Write 1 to set the (raw) status, mostly for debug." {
        _ 23 mbz;
        finish_irq 1 rw type(finish_irq_status) "Face detection processing done.";
        _ 7 mbz;
        err_irq 1 rw type(finish_irq_status) "Error received by the L3 port.";
    };
    
    register fdif_irqstatus_raw_j_2 addr(base, 0x44) "Per-event raw interrupt status vector, line #n. Raw status is set even if event is not enabled. Write 1 to set the (raw) status, mostly for debug." {
        _ 23 mbz;
        finish_irq 1 rw type(finish_irq_status) "Face detection processing done.";
        _ 7 mbz;
        err_irq 1 rw type(finish_irq_status) "Error received by the L3 port.";
    };

    constants finish_irq_status1 width(1) "" {
        FINISH_IRQ_0_w_3 = 0 "No action";
        FINISH_IRQ_0_r_3 = 0 "No (enabled) event pending";
        FINISH_IRQ_1_r_3 = 1 "Event pending";
        FINISH_IRQ_1_w_3 = 1 "Clear (raw) event";
    };
    
    register fdif_irqstatus_j_0 addr(base, 0x28) "Per-event 'enabled' interrupt status vector, line #n. Enabled status is not set unless event is enabled. Write 1 to clear the status after interrupt has been serviced (raw status gets cleared, that is, even if not enabled)." {
        _ 23 mbz;
        finish_irq 1 rw1c type(finish_irq_status1) "Face detection processing done.";
        _ 7 mbz;
        err_irq 1 rw1c type(finish_irq_status1) "Error received by the L3 port.";
    };
    
    register fdif_irqstatus_j_1 addr(base, 0x38) "Per-event 'enabled' interrupt status vector, line #n. Enabled status is not set unless event is enabled. Write 1 to clear the status after interrupt has been serviced (raw status gets cleared, that is, even if not enabled)." {
        _ 23 mbz;
        finish_irq 1 rw1c type(finish_irq_status1) "Face detection processing done.";
        _ 7 mbz;
        err_irq 1 rw1c type(finish_irq_status1) "Error received by the L3 port.";
    };
    
    register fdif_irqstatus_j_2 addr(base, 0x48) "Per-event 'enabled' interrupt status vector, line #n. Enabled status is not set unless event is enabled. Write 1 to clear the status after interrupt has been serviced (raw status gets cleared, that is, even if not enabled)." {
        _ 23 mbz;
        finish_irq 1 rw1c type(finish_irq_status1) "Face detection processing done.";
        _ 7 mbz;
        err_irq 1 rw1c type(finish_irq_status1) "Error received by the L3 port.";
    };

    constants finish_irq_status2 width(1) "" {
        FINISH_IRQ_0_w_6 = 0 "No action";
        FINISH_IRQ_0_r_6 = 0 "Interrupt disabled (masked)";
        FINISH_IRQ_1_r_6 = 1 "Interrupt enabled";
        FINISH_IRQ_1_w_6 = 1 "Enable interrupt";
    };
    
    register fdif_irqenable_set_j_0 addr(base, 0x2C) "Per-event interrupt enable bit vector, line #n. Write 1 to set (enable interrupt). Readout equal to corresponding _CLR register." {
        _ 23 mbz;
        finish_irq 1 rw type(finish_irq_status2) "Face detection processing done.";
        _ 7 mbz;
        err_irq 1 rw type(finish_irq_status2) "Error received by the L3 port.";
    };
    
    register fdif_irqenable_set_j_1 addr(base, 0x3C) "Per-event interrupt enable bit vector, line #n. Write 1 to set (enable interrupt). Readout equal to corresponding _CLR register." {
        _ 23 mbz;
        finish_irq 1 rw type(finish_irq_status2) "Face detection processing done.";
        _ 7 mbz;
        err_irq 1 rw type(finish_irq_status2) "Error received by the L3 port.";
    };
    
    register fdif_irqenable_set_j_2 addr(base, 0x4C) "Per-event interrupt enable bit vector, line #n. Write 1 to set (enable interrupt). Readout equal to corresponding _CLR register." {
        _ 23 mbz;
        finish_irq 1 rw type(finish_irq_status2) "Face detection processing done.";
        _ 7 mbz;
        err_irq 1 rw type(finish_irq_status2) "Error received by the L3 port.";
    };

    constants finish_irq_status3 width(1) "" {
        FINISH_IRQ_0_w_9 = 0 "No action";
        FINISH_IRQ_0_r_9 = 0 "Interrupt disabled (masked)";
        FINISH_IRQ_1_r_9 = 1 "Interrupt enabled";
        FINISH_IRQ_1_w_9 = 1 "Disable interrupt";
    };
    
    register fdif_irqenable_clr_j_0 addr(base, 0x30) "Per-event interrupt enable bit vector, line #n. Write 1 to clear (disable interrupt). Readout equal to corresponding _SET register." {
        _ 23 mbz;
        finish_irq 1 rw1c type(finish_irq_status3) "Face detection processing done.";
        _ 7 mbz;
        err_irq 1 rw1c type(finish_irq_status3) "Error received by the L3 port.";
    };
    
    register fdif_irqenable_clr_j_1 addr(base, 0x40) "Per-event interrupt enable bit vector, line #n. Write 1 to clear (disable interrupt). Readout equal to corresponding _SET register." {
        _ 23 mbz;
        finish_irq 1 rw1c type(finish_irq_status3) "Face detection processing done.";
        _ 7 mbz;
        err_irq 1 rw1c type(finish_irq_status3) "Error received by the L3 port.";
    };
    
    register fdif_irqenable_clr_j_2 addr(base, 0x50) "Per-event interrupt enable bit vector, line #n. Write 1 to clear (disable interrupt). Readout equal to corresponding _SET register." {
        _ 23 mbz;
        finish_irq 1 rw1c type(finish_irq_status3) "Face detection processing done.";
        _ 7 mbz;
        err_irq 1 rw1c type(finish_irq_status3) "Error received by the L3 port.";
    };
    
    register fdif_picaddr addr(base, 0x60) "Picture data store address" {
        addr 27 rw "Picture data store address. The 5 least significant bits are forced to 0.";
        _ 5 mbz;
    };

    constants mstandby_hdshk_status width(1) "" {
        MSTANDBY_HDSHK_0_r = 0 "Handshaking not completed. Do not initiate traffic on L3.";
        MSTANDBY_HDSHK_1_r = 1 "Handshaking completed. Can safely use the FDIF module.";
    };

    constants mstandby_status width(1) "" {
        MSTANDBY_0 = 0 "Write: Clear MStandby signal. One polls.MSTANDBY_HDSHK = 1 after writing this bit to ensure that the power management handshaking is completed.";
        MSTANDBY_1 = 1 "Write: Asserts MStandby signal";
    };

    constants wrnp_status width(1) "" {
        WRNP_0 = 0 "All writes are non posted";
        WRNP_1 = 1 "All writes are posted";
    };
    
    register fdif_ctrl addr(base, 0x64) "" {
        _ 25 mbz;
        mstandby_hdshk 1 ro type(mstandby_hdshk_status) "MStandby / Wait power management handshaking status bit The power management framework of the FDIF module is based on the handshaking of the MSTANDBY and WAIT signals. When going from a idle to normal power management transition, the software polls for FDIF_CTRL.MSTANDBY_HDSHK = 1 before starting the face detection processing.";
        mstandby 1 rw type(mstandby_status) "MStandby signal generation. This bit shall be set to initiate a power management transition from NORMAL to IDLE or IDLE to NORMAL.";
        max_tags 4 rw "Max interconnect tags. This bit field sets the maximum number of interconnect tags that the module shall use. This number is programmable between 1 (MAX_TAGS = 0) and FDIF_TAGS (MAX_TAGS = FDIF_TAGS - 1). The value of MAX_TAGS is reflected in the FIDIF_HWINFO register setting. This register setting is expected to have impact on performance. It shall be set once at initialization. Higher value will give more bandwidth to the initiator. Lower value will give less bandwidth to the initiator. This value shall be set as low as possible such that other system initiators are not penalized.";
        wrnp 1 rw type(wrnp_status) "L3 port non-posted write control. Dynamic usage of this feature is not supported. This bit shall be set at initialization and not modified hereafter until the processing is completed. When non-posted writes are used, tags shall be used for best performance (MAX_TAGS &amp;gt; 1).";
    };
    
    register fdif_wkaddr addr(base, 0x68) "" {
        addr 27 rw "Work area address The 5 least significant bits are forced to 0.";
        _ 5 mbz;
    };

    constants finish_status width(1) "" {
        FINISH_0 = 0 "Write: Disable Read: Process incomplete";
        FINISH_1 = 1 "Write: Process complete flag clear Read: Process complete";
    };

    constants run_status width(1) "" {
        RUN_0 = 0 "Write: Disable Read: No processing";
        RUN_1 = 1 "Write: Process start request Read: Processing data";
    };

    constants srst_status width(1) "" {
        SRST_0 = 0 "Write: Disable Read: Reset cancel";
        SRST_1 = 1 "Write: Reset Read: Under reset";
    };
    
    register fd_ctrl addr(base, 0x80) "Control register Don't set more than 2 bits to '1' at the same time. Otherwise, operations cannot be guaranteed." {
        _ 29 mbz;
        finish 1 rw type(finish_status) "Process Completion Flag Clear";
        run 1 rw type(run_status) "Process Start Request";
        srst 1 rw type(srst_status) "Software Reset This bit shall not be used to reset the FDIF module. Instead, the FDIF_SYSCONFIG[0] SOFTRESET bit shall be used for complete soft reset.";
    };
    
    register fd_dnum addr(base, 0x84) "Face Detection Result Count Register" {
        _ 26 mbz;
        dnum 6 ro "Face detection result count. Up to 35 faces can be detected. Number of face(s) detected: 0x0: 0 face detected 0x1: 1 face detected 0x2: 2 faces detected [...] 0x23: 35 faces detected 0x24 to 0x3F: unused";
    };

    constants dir_status width(2) "" {
        DIR_0 = 0 "Executes only for UP";
        DIR_1 = 1 "Executes only for RIGHT";
        DIR_2 = 2 "Executes only for LEFT";
        DIR_3 = 3 "Reserved";
    };

    constants min_status width(2) "" {
        MIN_0 = 0 "Set the min face size to 20 pixels";
        MIN_1 = 1 "Set the min face size to 25 pixels";
        MIN_2 = 2 "Set the min face size to 32 pixels";
        MIN_3 = 3 "Set the min face size to 40 pixels";
    };
    
    register fd_dcond addr(base, 0x88) "Detection Condition Setting Register" {
        _ 28 mbz;
        dir 2 rw type(dir_status) "Detection direction setting";
        min 2 rw type(min_status) "Reserved";
    };
    
    register fd_startx addr(base, 0x8C) "Detection Area Setting Register: X Start Coordinate." {
        _ 24 mbz;
        startx 8 rw "Starting X coordinates Permitted values are 0&amp;lt;=STARTX&amp;lt;=160";
    };
    
    register fd_starty addr(base, 0x90) "Detection Area Setting Register: Y Start Coordinate." {
        _ 25 mbz;
        starty 7 rw "Starting Y coordinates Permitted values are 0&amp;lt;=STARTY&amp;lt;=120";
    };
    
    register fd_sizex addr(base, 0x94) "Detection Area Setting Register: X Direction Size" {
        _ 23 mbz;
        sizex 9 rw "X Direction Size";
    };
    
    register fd_sizey addr(base, 0x98) "Detection Area Setting Register: Y Direction Size" {
        _ 24 mbz;
        sizey 8 rw "Y Direction Size";
    };
    
    register fd_lhit addr(base, 0x9C) "Threshold Setting Register" {
        _ 28 mbz;
        lhit 4 rw "Threshold Permitted values are 0x0 to 0x9";
    };
    
    register fd_centerx_i_0 addr(base, 0x160) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_1 addr(base, 0x170) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_2 addr(base, 0x180) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_3 addr(base, 0x190) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_4 addr(base, 0x1A0) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_5 addr(base, 0x1B0) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_6 addr(base, 0x1C0) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_7 addr(base, 0x1D0) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_8 addr(base, 0x1E0) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_9 addr(base, 0x1F0) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_10 addr(base, 0x200) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_11 addr(base, 0x210) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_12 addr(base, 0x220) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_13 addr(base, 0x230) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_14 addr(base, 0x240) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_15 addr(base, 0x250) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_16 addr(base, 0x260) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_17 addr(base, 0x270) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_18 addr(base, 0x280) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_19 addr(base, 0x290) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_20 addr(base, 0x2A0) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_21 addr(base, 0x2B0) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_22 addr(base, 0x2C0) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_23 addr(base, 0x2D0) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_24 addr(base, 0x2E0) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_25 addr(base, 0x2F0) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_26 addr(base, 0x300) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_27 addr(base, 0x310) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_28 addr(base, 0x320) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_29 addr(base, 0x330) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_30 addr(base, 0x340) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_31 addr(base, 0x350) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_32 addr(base, 0x360) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_33 addr(base, 0x370) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centerx_i_34 addr(base, 0x380) "Detection Result: X Coordinate. Its value is undefined after reset." {
        _ 23 rsvd;
        centerx 9 ro "Face position: center X coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0x13F";
    };
    
    register fd_centery_i_0 addr(base, 0x164) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_1 addr(base, 0x174) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_2 addr(base, 0x184) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_3 addr(base, 0x194) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_4 addr(base, 0x1A4) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_5 addr(base, 0x1B4) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_6 addr(base, 0x1C4) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_7 addr(base, 0x1D4) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_8 addr(base, 0x1E4) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_9 addr(base, 0x1F4) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_10 addr(base, 0x204) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_11 addr(base, 0x214) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_12 addr(base, 0x224) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_13 addr(base, 0x234) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_14 addr(base, 0x244) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_15 addr(base, 0x254) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_16 addr(base, 0x264) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_17 addr(base, 0x274) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_18 addr(base, 0x284) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_19 addr(base, 0x294) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_20 addr(base, 0x2A4) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_21 addr(base, 0x2B4) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_22 addr(base, 0x2C4) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_23 addr(base, 0x2D4) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_24 addr(base, 0x2E4) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_25 addr(base, 0x2F4) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_26 addr(base, 0x304) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_27 addr(base, 0x314) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_28 addr(base, 0x324) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_29 addr(base, 0x334) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_30 addr(base, 0x344) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_31 addr(base, 0x354) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_32 addr(base, 0x364) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_33 addr(base, 0x374) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_centery_i_34 addr(base, 0x384) "Detection Result: Y Coordinate. Its value is undefined after reset." {
        _ 24 rsvd;
        centery 8 ro "Face position: center Y coordinate The coordinates given by (FD_CENTERX_i, FD_CENTERY_i) give the central coordinates of the face position. Permitted values are 0x0 to 0xEF";
    };
    
    register fd_confsize_i_0 addr(base, 0x168) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_1 addr(base, 0x178) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_2 addr(base, 0x188) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_3 addr(base, 0x198) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_4 addr(base, 0x1A8) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_5 addr(base, 0x1B8) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_6 addr(base, 0x1C8) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_7 addr(base, 0x1D8) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_8 addr(base, 0x1E8) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_9 addr(base, 0x1F8) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_10 addr(base, 0x208) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_11 addr(base, 0x218) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_12 addr(base, 0x228) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_13 addr(base, 0x238) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_14 addr(base, 0x248) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_15 addr(base, 0x258) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_16 addr(base, 0x268) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_17 addr(base, 0x278) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_18 addr(base, 0x288) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_19 addr(base, 0x298) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_20 addr(base, 0x2A8) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_21 addr(base, 0x2B8) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_22 addr(base, 0x2C8) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_23 addr(base, 0x2D8) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_24 addr(base, 0x2E8) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_25 addr(base, 0x2F8) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_26 addr(base, 0x308) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_27 addr(base, 0x318) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_28 addr(base, 0x328) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_29 addr(base, 0x338) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_30 addr(base, 0x348) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_31 addr(base, 0x358) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_32 addr(base, 0x368) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_33 addr(base, 0x378) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_confsize_i_34 addr(base, 0x388) "Detection Result: Confidence Level and Size. Its value is undefined after reset." {
        _ 20 rsvd;
        conf 4 ro "Confidence level Permitted values are 0x0 (high) to 0x9 (low)";
        size 8 ro "Detection result face size Permitted values 0x14 to 0xF0";
    };
    
    register fd_angle_i_0 addr(base, 0x16C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_1 addr(base, 0x17C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_2 addr(base, 0x18C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_3 addr(base, 0x19C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_4 addr(base, 0x1AC) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_5 addr(base, 0x1BC) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_6 addr(base, 0x1CC) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_7 addr(base, 0x1DC) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_8 addr(base, 0x1EC) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_9 addr(base, 0x1FC) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_10 addr(base, 0x20C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_11 addr(base, 0x21C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_12 addr(base, 0x22C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_13 addr(base, 0x23C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_14 addr(base, 0x24C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_15 addr(base, 0x25C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_16 addr(base, 0x26C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_17 addr(base, 0x27C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_18 addr(base, 0x28C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_19 addr(base, 0x29C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_20 addr(base, 0x2AC) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_21 addr(base, 0x2BC) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_22 addr(base, 0x2CC) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_23 addr(base, 0x2DC) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_24 addr(base, 0x2EC) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_25 addr(base, 0x2FC) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_26 addr(base, 0x30C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_27 addr(base, 0x31C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_28 addr(base, 0x32C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_29 addr(base, 0x33C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_30 addr(base, 0x34C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_31 addr(base, 0x35C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_32 addr(base, 0x36C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_33 addr(base, 0x37C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
    
    register fd_angle_i_34 addr(base, 0x38C) "Detection Result: Angle. Its value is undefined after reset." {
        _ 23 rsvd;
        angle 9 ro "Detection result face angle Permitted values: When DIR = 0: 0x0 (0 deg) to 0x1E (30 deg) and 0x14A (330 deg) to 0x167 (359 deg) When DIR = 1: 0x03C (60 deg) to 0x078 (120 deg) When DIR = 2: 0x0F0 (240 deg) to 0x12C (300 deg)";
    };
};