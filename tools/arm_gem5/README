ARM on Gem5 usage and installation instructions:

1. Build Barrelfish for Arm on Gem5 (see Barrelfish wiki for further instructions)
   NOTE: Be sure to set 'enable_gem5' in <build_dir>/hake/Config.hs to true in
   order to enable the cache quirk workarounds for gem5.

2. If you are a member of ETH or Microsoft Research with access to the Barrelfish development tools continue with point 6 otherwise do steps 3 to 5

3. Get the gem5 simulator with 'hg clone hg clone http://repo.gem5.org/gem5 -r d45a02bd5391 gem5' (note you have to use this release to get a working environment out of the box)

4. Change to your gem5 directory and apply 'gem5_patches.patch', located in '/path/to/barrelfish/tools/arm_gem5' to the gem5 source code

5. Build gem5 with 'scons build/ARM/gem5.fast' and add the binary to the PATH 
   NOTE: I had to use an older version of gcc, gcc 4.4 - 4.6 worked for me. If you have troubles install gcc 4.4 and compile with 'CXX=g++-4.4 scons build/ARM/gem5.fast'

6. In your Barrelfish build directory run 'make arm_gem5' to run the simulation

7. To get the output of Barrelfish you can use 'telnet localhost 3456'

NOTE 1: You can print the supported options of the gem5 script with 'gem5.fast ../tools/gem5/gem5script.py -h'
NOTE 2: If you use --cpu-type=arm_detailed (use make arm_gem5_detailed), the simulation takes a long time (depending on your machine up to an hour just to boot Barrelfish) 
